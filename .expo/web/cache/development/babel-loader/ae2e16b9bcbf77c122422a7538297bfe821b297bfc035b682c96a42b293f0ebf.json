{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"onImageCrop\", \"aspectRatio\"];\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { createRef } from 'react';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport UIManager from \"react-native-web/dist/exports/UIManager\";\nvar RCTCropView = requireNativeComponent('CropView');\nvar CropView = function (_React$PureComponent) {\n  _inherits(CropView, _React$PureComponent);\n  var _super = _createSuper(CropView);\n  function CropView() {\n    var _this;\n    _classCallCheck(this, CropView);\n    _this = _super.apply(this, arguments);\n    _this.viewRef = createRef();\n    _this.saveImage = function () {\n      var preserveTransparency = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var quality = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 90;\n      UIManager.dispatchViewManagerCommand(findNodeHandle(_this.viewRef.current), UIManager.getViewManagerConfig('CropView').Commands.saveImage, [preserveTransparency, quality]);\n    };\n    _this.rotateImage = function () {\n      var clockwise = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      UIManager.dispatchViewManagerCommand(findNodeHandle(_this.viewRef.current), UIManager.getViewManagerConfig('CropView').Commands.rotateImage, [clockwise]);\n    };\n    return _this;\n  }\n  _createClass(CropView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        onImageCrop = _this$props.onImageCrop,\n        aspectRatio = _this$props.aspectRatio,\n        rest = _objectWithoutProperties(_this$props, _excluded);\n      return React.createElement(RCTCropView, Object.assign({\n        ref: this.viewRef,\n        cropAspectRatio: aspectRatio,\n        onImageSaved: function onImageSaved(event) {\n          onImageCrop(event.nativeEvent);\n        }\n      }, rest));\n    }\n  }]);\n  return CropView;\n}(React.PureComponent);\nCropView.defaultProps = {\n  keepAspectRatio: false,\n  iosDimensionSwapEnabled: false\n};\nexport default CropView;","map":{"version":3,"names":["React","createRef","findNodeHandle","requireNativeComponent","UIManager","RCTCropView","CropView","_React$PureComponent","_inherits","_super","_createSuper","_this","_classCallCheck","apply","arguments","viewRef","saveImage","preserveTransparency","length","undefined","quality","dispatchViewManagerCommand","current","getViewManagerConfig","Commands","rotateImage","clockwise","_createClass","key","value","render","_this$props","props","onImageCrop","aspectRatio","rest","_objectWithoutProperties","_excluded","createElement","Object","assign","ref","cropAspectRatio","onImageSaved","event","nativeEvent","PureComponent","defaultProps","keepAspectRatio","iosDimensionSwapEnabled"],"sources":["C:/Users/caioe/Deepcoffe02-master/node_modules/react-native-image-crop-tools/dist/crop-view.component.js"],"sourcesContent":["import React, { createRef } from 'react';\nimport { findNodeHandle, requireNativeComponent, UIManager, } from 'react-native';\nconst RCTCropView = requireNativeComponent('CropView');\nclass CropView extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.viewRef = createRef();\n        this.saveImage = (preserveTransparency = true, quality = 90) => {\n            UIManager.dispatchViewManagerCommand(findNodeHandle(this.viewRef.current), UIManager.getViewManagerConfig('CropView').Commands.saveImage, [preserveTransparency, quality]);\n        };\n        this.rotateImage = (clockwise = true) => {\n            UIManager.dispatchViewManagerCommand(findNodeHandle(this.viewRef.current), UIManager.getViewManagerConfig('CropView').Commands.rotateImage, [clockwise]);\n        };\n    }\n    render() {\n        const { onImageCrop, aspectRatio, ...rest } = this.props;\n        return (React.createElement(RCTCropView, Object.assign({ ref: this.viewRef, cropAspectRatio: aspectRatio, onImageSaved: (event) => {\n                onImageCrop(event.nativeEvent);\n            } }, rest)));\n    }\n}\nCropView.defaultProps = {\n    keepAspectRatio: false,\n    iosDimensionSwapEnabled: false,\n};\nexport default CropView;\n"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,cAAA;AAAA,SAChBC,sBAAsB;AAAA,OAAAC,SAAA;AAC/C,IAAMC,WAAW,GAAGF,sBAAsB,CAAC,UAAU,CAAC;AAAC,IACjDG,QAAQ,aAAAC,oBAAA;EAAAC,SAAA,CAAAF,QAAA,EAAAC,oBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,QAAA;EACV,SAAAA,SAAA,EAAc;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,QAAA;IACVK,KAAA,GAAAF,MAAA,CAAAI,KAAA,OAASC,SAAS;IAClBH,KAAA,CAAKI,OAAO,GAAGd,SAAS,EAAE;IAC1BU,KAAA,CAAKK,SAAS,GAAG,YAA+C;MAAA,IAA9CC,oBAAoB,GAAAH,SAAA,CAAAI,MAAA,QAAAJ,SAAA,QAAAK,SAAA,GAAAL,SAAA,MAAG,IAAI;MAAA,IAAEM,OAAO,GAAAN,SAAA,CAAAI,MAAA,QAAAJ,SAAA,QAAAK,SAAA,GAAAL,SAAA,MAAG,EAAE;MACvDV,SAAS,CAACiB,0BAA0B,CAACnB,cAAc,CAACS,KAAA,CAAKI,OAAO,CAACO,OAAO,CAAC,EAAElB,SAAS,CAACmB,oBAAoB,CAAC,UAAU,CAAC,CAACC,QAAQ,CAACR,SAAS,EAAE,CAACC,oBAAoB,EAAEG,OAAO,CAAC,CAAC;IAC9K,CAAC;IACDT,KAAA,CAAKc,WAAW,GAAG,YAAsB;MAAA,IAArBC,SAAS,GAAAZ,SAAA,CAAAI,MAAA,QAAAJ,SAAA,QAAAK,SAAA,GAAAL,SAAA,MAAG,IAAI;MAChCV,SAAS,CAACiB,0BAA0B,CAACnB,cAAc,CAACS,KAAA,CAAKI,OAAO,CAACO,OAAO,CAAC,EAAElB,SAAS,CAACmB,oBAAoB,CAAC,UAAU,CAAC,CAACC,QAAQ,CAACC,WAAW,EAAE,CAACC,SAAS,CAAC,CAAC;IAC5J,CAAC;IAAC,OAAAf,KAAA;EACN;EAACgB,YAAA,CAAArB,QAAA;IAAAsB,GAAA;IAAAC,KAAA,EACD,SAAAC,OAAA,EAAS;MACL,IAAAC,WAAA,GAA8C,IAAI,CAACC,KAAK;QAAhDC,WAAW,GAAAF,WAAA,CAAXE,WAAW;QAAEC,WAAW,GAAAH,WAAA,CAAXG,WAAW;QAAKC,IAAI,GAAAC,wBAAA,CAAAL,WAAA,EAAAM,SAAA;MACzC,OAAQrC,KAAK,CAACsC,aAAa,CAACjC,WAAW,EAAEkC,MAAM,CAACC,MAAM,CAAC;QAAEC,GAAG,EAAE,IAAI,CAAC1B,OAAO;QAAE2B,eAAe,EAAER,WAAW;QAAES,YAAY,EAAE,SAAAA,aAACC,KAAK,EAAK;UAC3HX,WAAW,CAACW,KAAK,CAACC,WAAW,CAAC;QAClC;MAAE,CAAC,EAAEV,IAAI,CAAC,CAAC;IACnB;EAAC;EAAA,OAAA7B,QAAA;AAAA,EAhBkBN,KAAK,CAAC8C,aAAa;AAkB1CxC,QAAQ,CAACyC,YAAY,GAAG;EACpBC,eAAe,EAAE,KAAK;EACtBC,uBAAuB,EAAE;AAC7B,CAAC;AACD,eAAe3C,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}